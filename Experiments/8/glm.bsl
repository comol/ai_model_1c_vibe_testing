//////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ВЫГРУЗКИ И ЗАГРУЗКИ НОМЕНКЛАТУРЫ
//////////////////////////////////////////////////////////////////////////////

// Процедура для выгрузки справочника Номенклатура в файл
Процедура ВыгрузитьНоменклатуру(ИмяФайла) Экспорт
	
	// Создаем объект записи в XML
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайла);
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Номенклатура");
	
	// Получаем все элементы справочника Номенклатура
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ЭтоГруппа";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		
		// Записываем начало элемента для номенклатурной позиции
		ЗаписьXML.ЗаписатьНачалоЭлемента("Элемент");
		
		// Записываем реквизиты и свойства элемента
		ЗаписатьРеквизиты(ЗаписьXML, Объект);
		ЗаписатьТабличныеЧасти(ЗаписьXML, Объект);
		
		// Завершаем элемент
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
	
КонецПроцедуры

// Процедура для загрузки справочника Номенклатура из файла
Процедура ЗагрузитьНоменклатуру(ИмяФайла) Экспорт
	
	// Создаем объект чтения XML
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		// Проверяем тип элемента
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Если ЧтениеXML.Имя = "Элемент" Тогда
				// Создаем новый объект справочника Номенклатура
				НовыйОбъект = Справочники.Номенклатура.СоздатьЭлемент();
				
				// Читаем данные элемента
				ПрочитатьРеквизиты(ЧтениеXML, НовыйОбъект);
				ПрочитатьТабличныеЧасти(ЧтениеXML, НовыйОбъект);
				
				// Проверяем существование элемента с таким кодом
				СуществующийЭлемент = Справочники.Номенклатура.НайтиПоКоду(НовыйОбъект.Код);
				Если СуществующийЭлемент.Пустая() Тогда
					// Если не найден, записываем новый
					НовыйОбъект.Записать();
				Иначе
					// Если найден, обновляем существующий, но сначала подгрузим текущее состояние
					ОбъектДляОбновления = СуществующийЭлемент.ПолучитьОбъект();
					ЗаполнитьЗначенияСвойств(ОбъектДляОбновления, НовыйОбъект);
					ОбъектДляОбновления.Записать();
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
КонецПроцедуры

// Вспомогательная процедура для записи реквизитов объекта в XML
Процедура ЗаписатьРеквизиты(ЗаписьXML, Объект)
	
	// Записываем ссылку как наименование
	ЗаписьXML.ЗаписатьАтрибут("Ссылка", Строка(Объект.Ссылка));
	
	// Записываем стандартные реквизиты
	ЗаписьXML.ЗаписатьАтрибут("Код", Объект.Код);
	ЗаписьXML.ЗаписатьАтрибут("Наименование", Объект.Наименование);
	
	// Записываем остальные реквизиты (кроме предопределенных)
	Для Каждого Реквизит Из Объект.Метаданные().Реквизиты Цикл
		Если Реквизит.Имя <> "Код" И Реквизит.Имя <> "Наименование" Тогда
			Значение = Объект[Реквизит.Имя];
			ТипЗначения = ТипЗнч(Значение);
			
			Если ТипЗначения = Тип("СправочникСсылка") Тогда
				Значение = Значение.Наименование;
			ИначеЕсли ТипЗначения = Тип("Число") Тогда
				Значение = Строка(Значение);
			ИначеЕсли ТипЗначения = Тип("Дата") Тогда
				Значение = Формат(Значение, "ДЛФ=DT"); 
			ИначеЕсли ТипЗначения = Тип("Булево") Тогда
				Значение = ?(Значение, "1", "0");
			Иначе
				Значение = Строка(Значение);
			КонецЕсли;
			
			ЗаписьXML.ЗаписатьАтрибут(Реквизит.Имя, Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Вспомогательная процедура для записи табличных частей объекта в XML
Процедура ЗаписатьТабличныеЧасти(ЗаписьXML, Объект)
	
	// Для каждой табличной части объекта
	Для Каждого ИмяТЧ Из Объект.Метаданные().ТабличныеЧасти Цикл
		ТЧ = Объект[ИмяТЧ.Имя];
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ТабличнаяЧасть");
		ЗаписьXML.ЗаписатьАтрибут("Имя", ИмяТЧ.Имя);
		
		// Для каждой строки табличной части
		Для Каждого Строка Из ТЧ Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("Строка");
			
			// Для каждого реквизита строки
			Для Каждого Реквизит ИЗ ИмяТЧ.Реквизиты Цикл
				Значение = Строка[Реквизит.Имя];
				ТипЗначения = ТипЗнч(Значение);
				
				Если ТипЗначения = Тип("СправочникСсылка") Тогда
					Значение = Значение.Наименование;
				ИначеЕсли ТипЗначения = Тип("Число") Тогда
					Значение = Строка(Значение);
				ИначеЕсли ТипЗначения = Тип("Дата") Тогда
					Значение = Формат(Значение, "ДЛФ=DT"); 
				ИначеЕсли ТипЗначения = Тип("Булево") Тогда
					Значение = ?(Значение, "1", "0");
				Иначе
					Значение = Строка(Значение);
				КонецЕсли;
				
				ЗаписьXML.ЗаписатьАтрибут(Реквизит.Имя, Значение);
			КонецЦикла;
			
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
КонецПроцедуры

// Вспомогательная процедура для чтения реквизитов объекта из XML
Процедура ПрочитатьРеквизиты(ЧтениеXML, Объект)
	
	// Читаем все атрибуты
	Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
		ИмяАтрибута = ЧтениеXML.Имя;
		Значение = ЧтениеXML.Значение;
		
		Если ИмяАтрибута = "Код" Тогда
			Объект.Код = Значение;
		ИначеЕсли ИмяАтрибута = "Наименование" Тогда
			Объект.Наименование = Значение;
		ИначеЕсли ИмяАтрибута = "Ссылка" Тогда
			// Пропускаем ссылку, она только для информации
		Иначе
			// Определяем тип реквизита
			Если Объект.Метаданные().Реквизиты.Найти(ИмяАтрибута) <> Неопределено Тогда
				ТипРеквизита = Объект.Метаданные().Реквизиты.Найти(ИмяАтрибута).Тип;
				
				Если ТипРеквизита.СодержитТип(Тип("СправочникСсылка.Номенклатура")) Тогда
					// Поиск по наименованию в справочнике Номенклатура
					НайденнаяСсылка = Справочники.Номенклатура.НайтиПоНаименованию(Значение);
					Если Не НайденнаяСсылка.Пустая() Тогда
						Объект[ИмяАтрибута] = НайденнаяСсылка;
					КонецЕсли;
				ИначеЕсли ТипРеквизита.СодержитТип(Тип("Число")) Тогда
					Объект[ИмяАтрибута] = Число(Значение);
				ИначеЕсли ТипРеквизита.СодержитТип(Тип("Дата")) Тогда
					Объект[ИмяАтрибута] = Дата(Значение);
				ИначеЕсли ТипРеквизита.СодержитТип(Тип("Булево")) Тогда
					Объект[ИмяАтрибута] = Значение = "1";
				Иначе
					Объект[ИмяАтрибута] = Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Вспомогательная процедура для чтения табличных частей объекта из XML
Процедура ПрочитатьТабличныеЧасти(ЧтениеXML, Объект)
	
	// Читаем табличные части
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "ТабличнаяЧасть" Тогда
			ИмяТЧ = ЧтениеXML.ЗначениеАтрибута("Имя");
			
			// Очищаем табличную часть
			ТЧ = Объект[ИмяТЧ];
			ТЧ.Очистить();
			
			// Читаем строки табличной части
			Пока ЧтениеXML.Прочитать() Цикл
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Строка" Тогда
					НоваяСтрока = ТЧ.Добавить();
					
					// Читаем атрибуты
					Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
						ИмяАтрибута = ЧтениеXML.Имя;
						Значение = ЧтениеXML.Значение;
						
						// Определяем тип реквизита
						МетаданныеТЧ = Объект.Метаданные().ТабличныеЧасти.Найти(ИмяТЧ);
						Если МетаданныеТЧ <> Неопределено Тогда
							МетаданныеРеквизита = МетаданныеТЧ.Реквизиты.Найти(ИмяАтрибута);
							Если МетаданныеРеквизита <> Неопределено Тогда
								ТипРеквизита = МетаданныеРеквизита.Тип;
								
								Если ТипРеквизита.СодержитТип(Тип("СправочникСсылка.Номенклатура")) Тогда
									// Поиск по наименованию в справочнике Номенклатура
									НайденнаяСсылка = Справочники.Номенклатура.НайтиПоНаименованию(Значение);
									Если Не НайденнаяСсылка.Пустая() Тогда
										НоваяСтрока[ИмяАтрибута] = НайденнаяСсылка;
									КонецЕсли;
								ИначеЕсли ТипРеквизита.СодержитТип(Тип("Число")) Тогда
									НоваяСтрока[ИмяАтрибута] = Число(Значение);
								ИначеЕсли ТипРеквизита.СодержитТип(Тип("Дата")) Тогда
									НоваяСтрока[ИмяАтрибута] = Дата(Значение);
								ИначеЕсли ТипРеквизита.СодержитТип(Тип("Булево")) Тогда
									НоваяСтрока[ИмяАтрибута] = Значение = "1";
								Иначе
									НоваяСтрока[ИмяАтрибута] = Значение;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "ТабличнаяЧасть" Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Элемент" Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Пример использования процедур
Процедура выполнитьВыгрузкуЗагрузку()
	
	// Выгрузка номенклатуры в файл
	ИмяФайлаВыгрузки = "C:\Temp\НоменклатураВыгрузка.xml";
	ВыгрузитьНоменклатуру(ИмяФайлаВыгрузки);
	
	Сообщить("Выгрузка номенклатуры завершена в файл: " + ИмяФайлаВыгрузки);
	
	// Загрузка номенклатуры из файла
	// ИмяФайлаЗагрузки = "C:\Temp\НоменклатураВыгрузка.xml";
	// ЗагрузитьНоменклатуру(ИмяФайлаЗагрузки);
	// Сообщить("Загрузка номенклатуры завершена из файла: " + ИмяФайлаЗагрузки);
	
КонецПроцедуры