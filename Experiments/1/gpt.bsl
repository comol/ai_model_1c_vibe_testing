// Утилиты: генерация случайного массива и сортировка пузырьком

///////////////////////////////////////////////////////
// СоздатьМассивСлучайныхЦелых
// Генерирует массив из КоличествоЭлементов целых чисел в диапазоне [НижняяГраница; ВерхняяГраница].
// Параметры:
//   КоличествоЭлементов: Число >= 0, по умолчанию 10
//   НижняяГраница: Число >= 0, по умолчанию 0
//   ВерхняяГраница: Число >= НижняяГраница, по умолчанию 100
// Возвращаемое значение:
//   Массив — заполненный массив целых чисел.
///////////////////////////////////////////////////////
Функция СоздатьМассивСлучайныхЦелых(КоличествоЭлементов = 10, НижняяГраница = 0, ВерхняяГраница = 100) Экспорт
	
	Если КоличествоЭлементов < 0 Тогда
		КоличествоЭлементов = 0;
	КонецЕсли;
	
	Если НижняяГраница < 0 Тогда
		НижняяГраница = 0;
	КонецЕсли;
	
	Если ВерхняяГраница < НижняяГраница Тогда
		ВерхняяГраница = НижняяГраница;
	КонецЕсли;
	
	Результат = Новый Массив();
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	Для Индекс = 0 По (КоличествоЭлементов - 1) Цикл
		
		Результат.Добавить(ГСЧ.СлучайноеЧисло(НижняяГраница, ВерхняяГраница));
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

///////////////////////////////////////////////////////
// ПузырьковаяСортировка
// Сортирует массив чисел по возрастанию на месте (in-place).
// Параметры:
//   МассивЧисел: Массив чисел для сортировки.
///////////////////////////////////////////////////////
Процедура ПузырьковаяСортировка(МассивЧисел) Экспорт
	
	Количество = МассивЧисел.Количество();
	Если Количество <= 1 Тогда
		Возврат;
	КонецЕсли;
	
	ПоследнийИндекс = Количество - 1;
	
	Для ВнешнийИндекс = 0 По (ПоследнийИндекс - 1) Цикл
		
		БылиПерестановки = Ложь;
		
		Для ВнутреннийИндекс = 0 По (ПоследнийИндекс - ВнешнийИндекс - 1) Цикл
			
			Если МассивЧисел[ВнутреннийИндекс] > МассивЧисел[ВнутреннийИндекс + 1] Тогда
				
				ВременноеЗначение = МассивЧисел[ВнутреннийИндекс];
				МассивЧисел[ВнутреннийИндекс] = МассивЧисел[ВнутреннийИндекс + 1];
				МассивЧисел[ВнутреннийИндекс + 1] = ВременноеЗначение;
				
				БылиПерестановки = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ БылиПерестановки Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////
// ОтсортированныйСлучайныйМассив
// Создает случайный массив и возвращает его, отсортировав пузырьком по возрастанию.
// Возвращаемое значение: Массив.
///////////////////////////////////////////////////////
Функция ОтсортированныйСлучайныйМассив(КоличествоЭлементов = 10, НижняяГраница = 0, ВерхняяГраница = 100) Экспорт
	
	Результат = СоздатьМассивСлучайныхЦелых(КоличествоЭлементов, НижняяГраница, ВерхняяГраница);
	
	ПузырьковаяСортировка(Результат);
	
	Возврат Результат;
	
КонецФункции

// Пример использования:
// МассивЧисел = СоздатьМассивСлучайныхЦелых(20, 0, 100);
// ПузырьковаяСортировка(МассивЧисел);
// // или одним вызовом:
// МассивЧисел = ОтсортированныйСлучайныйМассив(20, 0, 100);