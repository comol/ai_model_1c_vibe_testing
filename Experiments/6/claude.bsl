// Модуль объекта обработки ЗагрузкаНоменклатурыИзExcel
// Содержит основную логику загрузки данных из Excel в справочник Номенклатура
//
// Пример использования:
// Обработка = Обработки.ЗагрузкаНоменклатурыИзExcel.Создать();
// Обработка.ЗагрузитьДанныеИзExcel("C:\Данные\Номенклатура.xlsx", 2);

// Процедура выполняет загрузку данных из файла Excel в справочник Номенклатура
//
// Параметры:
//  ИмяФайла - Строка - полный путь к файлу Excel
//  НачальнаяСтрока - Число - номер строки, с которой начинаются данные (по умолчанию 2)
//
Процедура ЗагрузитьДанныеИзExcel(ИмяФайла, НачальнаяСтрока = 2) Экспорт
	
	// Попытка загрузки через COM-объект (для Windows)
	Попытка
		ЗагрузитьЧерезCOM(ИмяФайла, НачальнаяСтрока);
	Исключение
		// Если не удалось через COM, пробуем через табличный документ
		ЗагрузитьЧерезТабличныйДокумент(ИмяФайла, НачальнаяСтрока);
	КонецПопытки;
	
КонецПроцедуры

// Процедура загрузки через COM-объект Excel (работает только в Windows)
//
// Параметры:
//  ИмяФайла - Строка - полный путь к файлу Excel
//  НачальнаяСтрока - Число - номер строки, с которой начинаются данные
//
Процедура ЗагрузитьЧерезCOM(ИмяФайла, НачальнаяСтрока)
	
	// Счетчики для отчета о загрузке
	КоличествоЗагружено = 0;
	КоличествоОшибок = 0;
	СписокОшибок = Новый СписокЗначений;
	
	Попытка
		
		// Создание COM-объекта Excel
		Excel = Новый COMОбъект("Excel.Application");
		Excel.Visible = Ложь;
		Excel.DisplayAlerts = Ложь;
		
		// Открытие файла
		Книга = Excel.Workbooks.Open(ИмяФайла);
		Лист = Книга.Worksheets(1);
		
		// Определение последней заполненной строки
		xlCellTypeLastCell = 11;
		ПоследняяСтрока = Лист.Cells.SpecialCells(xlCellTypeLastCell).Row;
		
		// Цикл по строкам файла
		Для НомерСтроки = НачальнаяСтрока По ПоследняяСтрока Цикл
			
			// Чтение данных из ячеек
			Артикул = СокрЛП(Строка(Лист.Cells(НомерСтроки, 1).Value));
			Наименование = СокрЛП(Строка(Лист.Cells(НомерСтроки, 2).Value));
			Описание = СокрЛП(Строка(Лист.Cells(НомерСтроки, 3).Value));
			ЕдиницаИзмерения = СокрЛП(Строка(Лист.Cells(НомерСтроки, 4).Value));
			
			// Проверка обязательных полей
			Если ПустаяСтрока(Артикул) И ПустаяСтрока(Наименование) Тогда
				// Пропускаем пустые строки
				Продолжить;
			КонецЕсли;
			
			Если ПустаяСтрока(Наименование) Тогда
				КоличествоОшибок = КоличествоОшибок + 1;
				СписокОшибок.Добавить("Строка " + НомерСтроки + ": не заполнено наименование");
				Продолжить;
			КонецЕсли;
			
			Попытка
				
				// Поиск или создание элемента справочника
				Если НЕ ПустаяСтрока(Артикул) Тогда
					// Сначала ищем по артикулу
					НоменклатураСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул);
				Иначе
					НоменклатураСсылка = Справочники.Номенклатура.ПустаяСсылка();
				КонецЕсли;
				
				// Если не нашли по артикулу, ищем по наименованию
				Если НоменклатураСсылка.Пустая() Тогда
					НоменклатураСсылка = Справочники.Номенклатура.НайтиПоНаименованию(Наименование, Истина);
				КонецЕсли;
				
				// Создание нового элемента или получение существующего для редактирования
				Если НоменклатураСсылка.Пустая() Тогда
					НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
					НоменклатураОбъект.Наименование = Наименование;
				Иначе
					НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
				КонецЕсли;
				
				// Заполнение реквизитов
				Если НЕ ПустаяСтрока(Артикул) Тогда
					НоменклатураОбъект.Артикул = Артикул;
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(Описание) Тогда
					НоменклатураОбъект.Описание = Описание;
				КонецЕсли;
				
				// Обработка единицы измерения
				Если НЕ ПустаяСтрока(ЕдиницаИзмерения) Тогда
					// Попытка найти единицу измерения в справочнике
					ЕдиницаИзмеренияСсылка = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ЕдиницаИзмерения, Истина);
					Если НЕ ЕдиницаИзмеренияСсылка.Пустая() Тогда
						НоменклатураОбъект.ЕдиницаИзмерения = ЕдиницаИзмеренияСсылка;
					КонецЕсли;
				КонецЕсли;
				
				// Запись элемента
				НоменклатураОбъект.Записать();
				КоличествоЗагружено = КоличествоЗагружено + 1;
				
			Исключение
				КоличествоОшибок = КоличествоОшибок + 1;
				ТекстОшибки = "Строка " + НомерСтроки + ": " + ОписаниеОшибки();
				СписокОшибок.Добавить(ТекстОшибки);
			КонецПопытки;
			
		КонецЦикла;
		
		// Закрытие Excel
		Книга.Close(Ложь);
		Excel.Quit();
		Excel = Неопределено;
		
	Исключение
		// Закрытие Excel в случае ошибки
		Если Excel <> Неопределено Тогда
			Попытка
				Книга.Close(Ложь);
			Исключение
				// Игнорируем ошибку закрытия книги
			КонецПопытки;
			
			Попытка
				Excel.Quit();
			Исключение
				// Игнорируем ошибку закрытия Excel
			КонецПопытки;
			
			Excel = Неопределено;
		КонецЕсли;
		
		ВызватьИсключение "Ошибка при работе с файлом Excel: " + ОписаниеОшибки();
	КонецПопытки;
	
	// Формирование отчета о загрузке
	ТекстСообщения = "Загрузка завершена!" + Символы.ПС + 
		"Загружено элементов: " + КоличествоЗагружено + Символы.ПС + 
		"Ошибок: " + КоличествоОшибок;
	
	Если КоличествоОшибок > 0 Тогда
		ТекстСообщения = ТекстСообщения + Символы.ПС + Символы.ПС + "Список ошибок:";
		Для Каждого Ошибка Из СписокОшибок Цикл
			ТекстСообщения = ТекстСообщения + Символы.ПС + Ошибка.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
	
КонецПроцедуры

// Процедура загрузки через табличный документ (универсальный метод)
//
// Параметры:
//  ИмяФайла - Строка - полный путь к файлу Excel
//  НачальнаяСтрока - Число - номер строки, с которой начинаются данные
//
Процедура ЗагрузитьЧерезТабличныйДокумент(ИмяФайла, НачальнаяСтрока)
	
	// Счетчики для отчета о загрузке
	КоличествоЗагружено = 0;
	КоличествоОшибок = 0;
	СписокОшибок = Новый СписокЗначений;
	
	Попытка
		
		// Создание и чтение табличного документа
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.Прочитать(ИмяФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);
		
		// Определение последней заполненной строки
		ПоследняяСтрока = ТабДок.ВысотаТаблицы;
		
		// Цикл по строкам файла
		Для НомерСтроки = НачальнаяСтрока По ПоследняяСтрока Цикл
			
			// Чтение данных из ячеек
			Область = ТабДок.ПолучитьОбласть(НомерСтроки, 1, НомерСтроки, 4);
			
			Артикул = СокрЛП(Строка(Область.ПолучитьОбласть(1, 1).Текст));
			Наименование = СокрЛП(Строка(Область.ПолучитьОбласть(1, 2).Текст));
			Описание = СокрЛП(Строка(Область.ПолучитьОбласть(1, 3).Текст));
			ЕдиницаИзмерения = СокрЛП(Строка(Область.ПолучитьОбласть(1, 4).Текст));
			
			// Проверка обязательных полей
			Если ПустаяСтрока(Артикул) И ПустаяСтрока(Наименование) Тогда
				// Пропускаем пустые строки
				Продолжить;
			КонецЕсли;
			
			Если ПустаяСтрока(Наименование) Тогда
				КоличествоОшибок = КоличествоОшибок + 1;
				СписокОшибок.Добавить("Строка " + НомерСтроки + ": не заполнено наименование");
				Продолжить;
			КонецЕсли;
			
			Попытка
				
				// Поиск или создание элемента справочника
				Если НЕ ПустаяСтрока(Артикул) Тогда
					// Сначала ищем по артикулу
					НоменклатураСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул);
				Иначе
					НоменклатураСсылка = Справочники.Номенклатура.ПустаяСсылка();
				КонецЕсли;
				
				// Если не нашли по артикулу, ищем по наименованию
				Если НоменклатураСсылка.Пустая() Тогда
					НоменклатураСсылка = Справочники.Номенклатура.НайтиПоНаименованию(Наименование, Истина);
				КонецЕсли;
				
				// Создание нового элемента или получение существующего для редактирования
				Если НоменклатураСсылка.Пустая() Тогда
					НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
					НоменклатураОбъект.Наименование = Наименование;
				Иначе
					НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
				КонецЕсли;
				
				// Заполнение реквизитов
				Если НЕ ПустаяСтрока(Артикул) Тогда
					НоменклатураОбъект.Артикул = Артикул;
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(Описание) Тогда
					НоменклатураОбъект.Описание = Описание;
				КонецЕсли;
				
				// Обработка единицы измерения
				Если НЕ ПустаяСтрока(ЕдиницаИзмерения) Тогда
					// Попытка найти единицу измерения в справочнике
					ЕдиницаИзмеренияСсылка = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ЕдиницаИзмерения, Истина);
					Если НЕ ЕдиницаИзмеренияСсылка.Пустая() Тогда
						НоменклатураОбъект.ЕдиницаИзмерения = ЕдиницаИзмеренияСсылка;
					КонецЕсли;
				КонецЕсли;
				
				// Запись элемента
				НоменклатураОбъект.Записать();
				КоличествоЗагружено = КоличествоЗагружено + 1;
				
			Исключение
				КоличествоОшибок = КоличествоОшибок + 1;
				ТекстОшибки = "Строка " + НомерСтроки + ": " + ОписаниеОшибки();
				СписокОшибок.Добавить(ТекстОшибки);
			КонецПопытки;
			
		КонецЦикла;
		
	Исключение
		ВызватьИсключение "Ошибка при чтении файла Excel: " + ОписаниеОшибки();
	КонецПопытки;
	
	// Формирование отчета о загрузке
	ТекстСообщения = "Загрузка завершена!" + Символы.ПС + 
		"Загружено элементов: " + КоличествоЗагружено + Символы.ПС + 
		"Ошибок: " + КоличествоОшибок;
	
	Если КоличествоОшибок > 0 Тогда
		ТекстСообщения = ТекстСообщения + Символы.ПС + Символы.ПС + "Список ошибок:";
		Для Каждого Ошибка Из СписокОшибок Цикл
			ТекстСообщения = ТекстСообщения + Символы.ПС + Ошибка.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
	
КонецПроцедуры
