//
// Обработка для загрузки номенклатуры из Excel файла
// Версия: 1.0
// Платформа: 1С:Предприятие 8.3.23
//

&AtClient
Procedure OnOpen(Cancel)
	
	// Инициализация формы при открытии
	Элементы.КнопкаЗагрузить.Доступность = Ложь;
	
EndProcedure

&AtClient
Procedure ВыбратьФайл(Команда)
	
	// Процедура выбора Excel файла для загрузки
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.ПолноеИмяФайла = "";
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = "Выберите файл Excel для загрузки номенклатуры";
	
	// Фильтр для Excel файлов
	ДиалогВыбораФайла.Фильтр = "Файлы Excel (*.xls; *.xlsx)|*.xls;*.xlsx|Все файлы (*.*)|*.*";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Объект.ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		Элементы.КнопкаЗагрузить.Доступность = Истина;
	КонецЕсли;
	
EndProcedure

&AtClient
Procedure ЗагрузитьНоменклатуру(Команда)
	
	// Основная процедура загрузки номенклатуры из Excel
	Если Не ЗначениеЗаполнено(Объект.ИмяФайла) Тогда
		Сообщить("Не выбран файл для загрузки!");
		Возврат;
	КонецЕсли;
	
	// Вызов серверной процедуры для загрузки данных
	ЗагрузитьНоменклатуруНаСервере(Объект.ИмяФайла);
	
EndProcedure

&AtServer
Procedure ЗагрузитьНоменклатуруНаСервере(ИмяФайла)
	
	// Серверная процедура для загрузки данных из Excel в справочник
	
	Попытка
		
		// Проверка существования файла
		Если Не ФайлСуществует(ИмяФайла) Тогда
			Сообщить("Файл не найден: " + ИмяФайла);
			Возврат;
		КонецЕсли;
		
		// Чтение Excel файла
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.Прочитать(ИмяФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);
		
		// Получение количества строк и колонок
		КоличествоСтрок = ТабличныйДокумент.ВысотаТаблицы;
		КоличествоКолонок = ТабличныйДокумент.ШиринаТаблицы;
		
		Если КоличествоСтрок < 2 Тогда
			Сообщить("В файле нет данных для загрузки!");
			Возврат;
		КонецЕсли;
		
		// Определение номеров колонок по заголовкам
		НомерКолонкиАртикул = НайтиКолонкуПоЗаголовку(ТабличныйДокумент, "Артикул");
		НомерКолонкиНаименование = НайтиКолонкуПоЗаголовку(ТабличныйДокумент, "Наименование");
		НомерКолонкиОписание = НайтиКолонкуПоЗаголовку(ТабличныйДокумент, "Описание");
		НомерКолонкиЕдиницаИзмерения = НайтиКолонкуПоЗаголовку(ТабличныйДокумент, "Единица измерения");
		
		// Проверка наличия обязательных колонок
		Если НомерКолонкиАртикул = 0 Или НомерКолонкиНаименование = 0 Тогда
			Сообщить("В файле отсутствуют обязательные колонки 'Артикул' или 'Наименование'!");
			Возврат;
		КонецЕсли;
		
		// Загрузка данных начиная со второй строки (пропуская заголовки)
		СчетчикЗагруженных = 0;
		СчетчикПропущенных = 0;
		
		Для НомерСтроки = 2 По КоличествоСтрок Цикл
			
			// Получение значений из ячеек
			Артикул = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерКолонкиАртикул, НомерСтроки, НомерКолонкиАртикул).ТекущаяОбласть.Текст);
			Наименование = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерКолонкиНаименование, НомерСтроки, НомерКолонкиНаименование).ТекущаяОбласть.Текст);
			
			// Проверка наличия обязательных данных
			Если Не ЗначениеЗаполнено(Артикул) Или Не ЗначениеЗаполнено(Наименование) Тогда
				СчетчикПропущенных = СчетчикПропущенных + 1;
				Продолжить;
			КонецЕсли;
			
			// Получение необязательных значений
			Описание = "";
			Если НомерКолонкиОписание > 0 Тогда
				Описание = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерКолонкиОписание, НомерСтроки, НомерКолонкиОписание).ТекущаяОбласть.Текст);
			КонецЕсли;
			
			ЕдиницаИзмерения = "";
			Если НомерКолонкиЕдиницаИзмерения > 0 Тогда
				ЕдиницаИзмерения = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерКолонкиЕдиницаИзмерения, НомерСтроки, НомерКолонкиЕдиницаИзмерения).ТекущаяОбласть.Текст);
			КонецЕсли;
			
			// Создание или обновление элемента справочника
			СоздатьИлиОбновитьЭлементНоменклатуры(Артикул, Наименование, Описание, ЕдиницаИзмерения);
			СчетчикЗагруженных = СчетчикЗагруженных + 1;
			
		КонецЦикла;
		
		// Вывод результатов загрузки
		Сообщить("Загрузка завершена!");
		Сообщить("Загружено элементов: " + СчетчикЗагруженных);
		Сообщить("Пропущено элементов: " + СчетчикПропущенных);
		
	Исключение
		Сообщить("Ошибка при загрузке файла: " + ОписаниеОшибки());
	КонецПопытки;
	
EndProcedure

&AtServer
Функция НайтиКолонкуПоЗаголовку(ТабличныйДокумент, Заголовок)
	
	// Функция поиска номера колонки по заголовку
	КоличествоКолонок = ТабличныйДокумент.ШиринаТаблицы;
	
	Для НомерКолонки = 1 По КоличествоКолонок Цикл
		ТекстЗаголовка = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(1, НомерКолонки, 1, НомерКолонки).ТекущаяОбласть.Текст);
		Если ВРег(ТекстЗаголовка) = ВРег(Заголовок) Тогда
			Возврат НомерКолонки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

&AtServer
Процедура СоздатьИлиОбновитьЭлементНоменклатуры(Артикул, Наименование, Описание, ЕдиницаИзмерения)
	
	// Процедура создания или обновления элемента справочника Номенклатура
	
	// Поиск существующего элемента по артикулу
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Артикул = &Артикул";
	
	Запрос.УстановитьПараметр("Артикул", Артикул);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		// Создание нового элемента
		ЭлементНоменклатуры = Справочники.Номенклатура.СоздатьЭлемент();
		ЭлементНоменклатуры.Артикул = Артикул;
	Иначе
		// Обновление существующего элемента
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЭлементНоменклатуры = Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	// Заполнение реквизитов
	ЭлементНоменклатуры.Наименование = Наименование;
	
	Если ЗначениеЗаполнено(Описание) Тогда
		ЭлементНоменклатуры.Описание = Описание;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		// Поиск или создание единицы измерения
		СсылкаЕдиницыИзмерения = НайтиИлиСоздатьЕдиницуИзмерения(ЕдиницаИзмерения);
		Если СсылкаЕдиницыИзмерения <> Неопределено Тогда
			ЭлементНоменклатуры.ЕдиницаИзмерения = СсылкаЕдиницыИзмерения;
		КонецЕсли;
	КонецЕсли;
	
	// Запись элемента
	ЭлементНоменклатуры.Записать();
	
КонецПроцедуры

&AtServer
Функция НайтиИлиСоздатьЕдиницуИзмерения(НаименованиеЕдиницы)
	
	// Функция поиска или создания единицы измерения
	// Возвращает ссылку на единицу измерения или Неопределено
	
	Попытка
		
		// Поиск существующей единицы измерения
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЕдиницыИзмерения.Ссылка
			|ИЗ
			|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
			|ГДЕ
			|	ЕдиницыИзмерения.Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование", НаименованиеЕдиницы);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
		// Создание новой единицы измерения
		НоваяЕдиница = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		НоваяЕдиница.Наименование = НаименованиеЕдиницы;
		НоваяЕдиница.Записать();
		
		Возврат НоваяЕдиница.Ссылка;
		
	Исключение
		Сообщить("Ошибка при работе с единицей измерения '" + НаименованиеЕдиницы + "': " + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции
