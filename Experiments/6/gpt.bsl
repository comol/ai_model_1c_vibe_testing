&НаКлиенте
Процедура ЗагрузитьНоменклатуруИзExcel(ПутьКФайлу) Экспорт
	// Загрузка элементов справочника Номенклатура из Excel.
	// Ожидаемые заголовки: Артикул, Наименование, Описание, Единица измерения.

	Если ПустаяСтрока(ПутьКФайлу) Тогда
		ВызватьИсключение "Не указан путь к файлу Excel.";
	КонецЕсли;

	Excel = Неопределено;
	Книга = Неопределено;
	Лист  = Неопределено;

	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.Visible = Ложь;
		Excel.DisplayAlerts = Ложь;

		Книга = Excel.Workbooks.Open(ПутьКФайлу);
		Лист  = Книга.Worksheets(1);

		ИспользуемыйДиапазон = Лист.UsedRange;
		ПерваяСтрока = ИспользуемыйДиапазон.Row;
		ПерваяКолонка = ИспользуемыйДиапазон.Column;
		ПоследняяСтрока = ПерваяСтрока + ИспользуемыйДиапазон.Rows.Count - 1;
		ПоследняяКолонка = ПерваяКолонка + ИспользуемыйДиапазон.Columns.Count - 1;

		СтрокаЗаголовков = ПерваяСтрока;

		КолАртикул = НайтиКолонкуПоЗаголовку(Лист, СтрокаЗаголовков, ПерваяКолонка, ПоследняяКолонка,
			Новый Массив("Артикул", "код товара", "код"));
		КолНаименование = НайтиКолонкуПоЗаголовку(Лист, СтрокаЗаголовков, ПерваяКолонка, ПоследняяКолонка,
			Новый Массив("Наименование", "наименование"));
		КолОписание = НайтиКолонкуПоЗаголовку(Лист, СтрокаЗаголовков, ПерваяКолонка, ПоследняяКолонка,
			Новый Массив("Описание", "описание товара"));
		КолЕдИзм = НайтиКолонкуПоЗаголовку(Лист, СтрокаЗаголовков, ПерваяКолонка, ПоследняяКолонка,
			Новый Массив("Единица измерения", "ЕдиницаИзмерения", "Ед. изм.", "Ед изм", "Едизм"));

		Если КолНаименование = 0 И КолАртикул = 0 Тогда
			ВызватьИсключение "Не найдены заголовки 'Артикул' и/или 'Наименование'.";
	КонецЕсли;

		МенНоменклатуры = Справочники.Номенклатура;

		Для НомерСтроки = СтрокаЗаголовков + 1 По ПоследняяСтрока Цикл

			Артикул = "";
			Наименование = "";
			Описание = "";
			ЕдиницаСтрока = "";

			Если КолАртикул > 0 Тогда
				Зн = Лист.Cells(НомерСтроки, КолАртикул).Value();
				Артикул = СокрЛП(Строка(Зн));
			КонецЕсли;

			Если КолНаименование > 0 Тогда
				Зн = Лист.Cells(НомерСтроки, КолНаименование).Value();
				Наименование = СокрЛП(Строка(Зн));
			КонецЕсли;

			Если КолОписание > 0 Тогда
				Зн = Лист.Cells(НомерСтроки, КолОписание).Value();
				Описание = СокрЛП(Строка(Зн));
			КонецЕсли;

			Если КолЕдИзм > 0 Тогда
				Зн = Лист.Cells(НомерСтроки, КолЕдИзм).Value();
				ЕдиницаСтрока = СокрЛП(Строка(Зн));
			КонецЕсли;

			// Пустая строка — пропускаем
			Если ПустаяСтрока(Артикул) И ПустаяСтрока(Наименование) И ПустаяСтрока(Описание) Тогда
				Продолжить;
			КонецЕсли;

			// Поиск существующего элемента
			Ссылка = МенНоменклатуры.ПустаяСсылка();
			Если Не ПустаяСтрока(Артикул) Тогда
				Если Метаданные.Справочники.Номенклатура.Реквизиты.Найти("Артикул") <> Неопределено Тогда
					Ссылка = МенНоменклатуры.НайтиПоРеквизиту("Артикул", Артикул);
				КонецЕсли;
			КонецЕсли;

			Если Ссылка = МенНоменклатуры.ПустаяСсылка() И Не ПустаяСтрока(Наименование) Тогда
				Ссылка = МенНоменклатуры.НайтиПоНаименованию(Наименование, Истина);
			КонецЕсли;

			Если Ссылка = МенНоменклатуры.ПустаяСсылка() Тогда
				Объект = МенНоменклатуры.СоздатьЭлемент();
			Иначе
				Объект = Ссылка.ПолучитьОбъект();
			КонецЕсли;

			Если Не ПустаяСтрока(Наименование) Тогда
				Объект.Наименование = Наименование;
			КонецЕсли;

			Если Метаданные.Справочники.Номенклатура.Реквизиты.Найти("Артикул") <> Неопределено Тогда
				Если Не ПустаяСтрока(Артикул) Тогда
					Объект.Артикул = Артикул;
				КонецЕсли;
			КонецЕсли;

			Если Метаданные.Справочники.Номенклатура.Реквизиты.Найти("Описание") <> Неопределено Тогда
				Объект.Описание = Описание;
			КонецЕсли;

			Если Не ПустаяСтрока(ЕдиницаСтрока) Тогда
				МетаЕд = Метаданные.Справочники.Номенклатура.Реквизиты.Найти("ЕдиницаИзмерения");
				Если МетаЕд = Неопределено Тогда
					MетаЕд = Метаданные.Справочники.Номенклатура.Реквизиты.Найти("ЕдиницаХраненияОстатков");
				КонецЕсли;

				Если МетаЕд <> Неопределено Тогда
					ТипРеквизита = МетаЕд.Тип;

					Если ТипРеквизита.СодержитТип(Тип("СправочникСсылка.ЕдиницыИзмерения")) Тогда
						ЕдМенеджер = Справочники.ЕдиницыИзмерения;
						ЕдСсылка = ЕдМенеджер.НайтиПоНаименованию(ЕдиницаСтрока, Истина);
						Если ЕдСсылка <> ЕдМенеджер.ПустаяСсылка() Тогда
							Объект[МетаЕд.Имя] = ЕдСсылка;
						КонецЕсли;
					ИначеЕсли ТипРеквизита.СодержитТип(Тип("Строка")) Тогда
						Объект[МетаЕд.Имя] = ЕдиницаСтрока;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Объект.Записать();

		КонецЦикла;

	Исключение
		// Закрытие Excel при ошибке
		Если Книга <> Неопределено Тогда
			Попытка Книга.Close(Ложь); Исключение КонецПопытки;
		КонецЕсли;
		Если Excel <> Неопределено Тогда
			Попытка Excel.Quit(); Исключение КонецПопытки;
		КонецЕсли;

		Excel = Неопределено;
		Книга = Неопределено;
		Лист  = Неопределено;

		ВызватьИсключение;
	КонецПопытки;

	// Нормальное закрытие
	Если Книга <> Неопределено Тогда
		Книга.Close(Ложь);
	КонецЕсли;
	Если Excel <> Неопределено Тогда
		Excel.Quit();
	КонецЕсли;

	Excel = Неопределено;
	Книга = Неопределено;
	Лист  = Неопределено;
КонецПроцедуры

Функция НайтиКолонкуПоЗаголовку(Лист, НомерСтроки, ЛеваяКолонка, ПраваяКолонка, Синонимы)
	// Возвращает индекс колонки по одному из заголовков-синонимов (без учета регистра и пробелов по краям).
	Для Колонка = ЛеваяКолонка По ПраваяКолонка Цикл
		ЗначениеЯчейки = Лист.Cells(НомерСтроки, Колонка).Value();
		Текст = СокрЛП(Строка(ЗначениеЯчейки));
		НизТекст = НРег(Текст);

		Для Каждого Синоним Из Синонимы Цикл
			Если НРег(СокрЛП(Строка(Синоним))) = НизТекст Тогда
				Возврат Колонка;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Возврат 0;
КонецФункции