// @language "bsl"

// Модуль для демонстрации списания товаров по методу FIFO.
// 
// Метод FIFO (First-In, First-Out) предполагает, что товары, 
// поступившие на склад первыми, списываются также первыми.
// 

&Вместо("Модуль")
Процедура ДемонстрацияСписанияFIFO() Экспорт
	
	// 1. Создание и заполнение таблицы остатков товаров.
	// Эта таблица имитирует остатки товаров на складе, поступивших разными партиями.
	ТаблицаОстатков = СоздатьТаблицуОстатков();
	
	ЗаголовокТаблицы = "Номенклатура, Количество, Сумма, Дата";
	
	Сообщить("--- Начальные остатки товаров ---");
	ВывестиТаблицуВСообщения(ТаблицаОстатков, ЗаголовокТаблицы);
	
	// 2. Определение параметров для списания.
	НоменклатураДляСписания = "Товар А";
	КоличествоКСписанию = 12; // Спишем 12 штук. Это больше, чем в первой партии (10 шт).
	
	Сообщить("");
	Сообщить("Списываем: " + НоменклатураДляСписания + ", " + КоличествоКСписанию + " шт.");
	Сообщить("_________________________________");
	
	// 3. Выполнение списания.
	РезультатСписания = СписатьТоварПоFIFO(ТаблицаОстатков, НоменклатураДляСписания, КоличествоКСписанию);
	
	// 4. Демонстрация результатов.
	Если РезультатСписания.Ошибка Тогда
		Сообщить("Ошибка списания: " + РезультатСписания.ТекстОшибки);
	Иначе
		Сообщить("");
		Сообщить("--- Списанные партии ---");
		ВывестиТаблицуВСообщения(РезультатСписания.СписанныеПартии, ЗаголовокТаблицы);
		Сообщить("Итоговая себестоимость списания: " + РезультатСписания.Себестоимость);
		
		Сообщить("");
		Сообщить("--- Остатки товаров после списания ---");
		ВывестиТаблицуВСообщения(РезультатСписания.ОбновленнаяТаблицаТоваров, ЗаголовокТаблицы);
	КонецЕсли;
	
КонецПроцедуры

// Функция для создания и заполнения таблицы остатков тестовыми данными.
//
// Возврат:
//   ТаблицаЗначений - ТаблицаЗначений, содержащая тестовые данные об остатках товаров.
//
Функция СоздатьТаблицуОстатков()
	
	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("Строка"));
	
	КвалификаторыЧислаКоличество = Новый КвалификаторыЧисла(10, 3);
	ТаблицаТоваров.Колонки.Добавить("Количество",   Новый ОписаниеТипов("Число", КвалификаторыЧислаКоличество));
	
	КвалификаторыЧислаСумма = Новый КвалификаторыЧисла(15, 2);
	ТаблицаТоваров.Колонки.Добавить("Сумма",        Новый ОписаниеТипов("Число", КвалификаторыЧислаСумма));
	
	ТаблицаТоваров.Колонки.Добавить("Дата",         Новый ОписаниеТипов("Дата"));
	
	Год = 2023;
	
	// Партии для "Товар А"
	НоваяСтрока = ТаблицаТоваров.Добавить();
	НоваяСтрока.Номенклатура = "Товар А";
	НоваяСтрока.Количество = 10;
	НоваяСтрока.Сумма = 1000;
	НоваяСтрока.Дата = Дата(Год, 1, 10);
	
	НоваяСтрока = ТаблицаТоваров.Добавить();
	НоваяСтрока.Номенклатура = "Товар А";
	НоваяСтрока.Количество = 15;
	НоваяСтрока.Сумма = 1650; // Другая цена за единицу (110)
	НоваяСтрока.Дата = Дата(Год, 1, 15);
	
	// Партия для "Товар Б"
	НоваяСтрока = ТаблицаТоваров.Добавить();
	НоваяСтрока.Номенклатура = "Товар Б";
	НоваяСтрока.Количество = 20;
	НоваяСтрока.Сумма = 2000;
	НоваяСтрока.Дата = Дата(Год, 1, 12);
	
	Возврат ТаблицаТоваров;
	
КонецФункции

// Функция выполняет списание указанного количества товара из таблицы остатков по методу FIFO.
//
// Параметры:
//   ТаблицаОстатков        - ТаблицаЗначений - исходная таблица с остатками.
//   НоменклатураСписания   - Строка - наименование номенклатуры для списания.
//   КоличествоСписания     - Число - количество, которое необходимо списать.
//
// Возврат:
//   Структура - Структура, содержащая результаты операции списания.
//
Функция СписатьТоварПоFIFO(Знач ТаблицаОстатков, Знач НоменклатураСписания, Знач КоличествоСписания)
	
	Результат = Новый Структура;
	Результат.Вставить("Ошибка", Ложь);
	Результат.Вставить("ТекстОшибки", "");
	
	ОбновленнаяТаблица = ТаблицаОстатков.Скопировать();
	
	// Отбор и сортировка партий для указанной номенклатуры
	ПартииДляСписания = Новый ТаблицаЗначений;
	ПартииДляСписания.Колонки.Добавить("Количество");
	ПартииДляСписания.Колонки.Добавить("Сумма");
	ПартииДляСписания.Колонки.Добавить("Дата");
	ПартииДляСписания.Колонки.Добавить("Индекс", Новый ОписаниеТипов("Число")); // Для связи с исходной таблицей
	
	Индекс = 0;
	Для Каждого СтрокаОстатка Из ОбновленнаяТаблица Цикл
		Если СтрокаОстатка.Номенклатура = НоменклатураСписания Тогда
			НоваяСтрока = ПартииДляСписания.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатка);
			НоваяСтрока.Индекс = Индекс;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	ПартииДляСписания.Сортировать("Дата Возр");
	
	// Проверка общего остатка
	ОбщийОстаток = ПартииДляСписания.Итог("Количество");
	Если ОбщийОстаток < КоличествоСписания Тогда
		Результат.Ошибка = Истина;
		Результат.ТекстОшибки = "Недостаточно товара '" + НоменклатураСписания + "'. Требуется: " 
			+ КоличествоСписания + ", в наличии: " + ОбщийОстаток;
		Возврат Результат;
	КонецЕсли;
	
	// Основной цикл списания
	ОсталосьСписать = КоличествоСписания;
	ОбщаяСебестоимость = 0;
	ТаблицаСписанныхПартий = ТаблицаОстатков.Скопировать();
	ТаблицаСписанныхПартий.Очистить();
	
	Для Каждого Партия Из ПартииДляСписания Цикл
		Если ОсталосьСписать <= 0 Тогда
			Прервать;
		КонецЕсли;
		
		СписываемоеКоличество = Мин(ОсталосьСписать, Партия.Количество);
		
		ЦенаЕдиницы = Партия.Сумма / Партия.Количество;
		СебестоимостьПартии = ЦенаЕдиницы * СписываемоеКоличество;
		
		ОбщаяСебестоимость = ОбщаяСебестоимость + СебестоимостьПартии;
		
		// Обновляем остатки в основной (скопированной) таблице
		СтрокаДляОбновления = ОбновленнаяТаблица[Партия.Индекс];
		СтрокаДляОбновления.Количество = СтрокаДляОбновления.Количество - СписываемоеКоличество;
		СтрокаДляОбновления.Сумма = СтрокаДляОбновления.Сумма - СебестоимостьПартии;
		
		// Заполняем информацию о списанной партии
		СписаннаяПартия = ТаблицаСписанныхПартий.Добавить();
		ЗаполнитьЗначенияСвойств(СписаннаяПартия, СтрокаДляОбновления);
		СписаннаяПартия.Количество = СписываемоеКоличество;
		СписаннаяПартия.Сумма = СебестоимостьПартии;
		СписаннаяПартия.Дата = Партия.Дата;
		
		ОсталосьСписать = ОсталосьСписать - СписываемоеКоличество;
	КонецЦикла;
	
	// Удаление строк с нулевым количеством
	Индекс = ОбновленнаяТаблица.Количество() - 1;
	Пока Индекс >= 0 Цикл
		Если ОбновленнаяТаблица[Индекс].Количество = 0 Тогда
			ОбновленнаяТаблица.Удалить(Индекс);
		КонецЕсли;
		Индекс = Индекс - 1;
	КонецЦикла;
	
	Результат.Вставить("ОбновленнаяТаблицаТоваров", ОбновленнаяТаблица);
	Результат.Вставить("СписанныеПартии", ТаблицаСписанныхПартий);
	Результат.Вставить("Себестоимость", ОбщаяСебестоимость);
	
	Возврат Результат;
	
КонецФункции

// Вспомогательная процедура для вывода таблицы значений в окно сообщений.
Процедура ВывестиТаблицуВСообщения(Таблица, Заголовки)
	
	Сообщить(Заголовки);
	Для Каждого Строка Из Таблица Цикл
		Сообщение = Строка.Номенклатура + ", " + Формат(Строка.Количество, "ЧДЦ=2") + ", " 
			+ Формат(Строка.Сумма, "ЧДЦ=2") + ", " + Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
		Сообщить(Сообщение);
	КонецЦикла;

КонецПроцедуры

// Запуск демонстрационной процедуры.
ДемонстрацияСписанияFIFO();
&КонецВместо
