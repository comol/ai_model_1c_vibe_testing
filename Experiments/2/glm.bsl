// Процедура демонстрации списания товара по методу FIFO
// 
// Данная процедура создает таблицу значений с поступлениями товара,
// заполняет ее тестовыми данными и демонстрирует списание по FIFO
//
Процедура ДемонстрацияСписанияFIFO() Экспорт
	
	// Создаем таблицу значений для хранения поступлений товара
	ТаблицаПоступлений = Новый ТаблицаЗначений;
	ТаблицаПоступлений.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаПоступлений.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаПоступлений.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ТаблицаПоступлений.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	
	// Заполняем таблицу тестовыми данными
	// Для демонстрации используем строки вместо реальных ссылок на номенклатуру
	
	// Первое поступление
	НоваяСтрока = ТаблицаПоступлений.Добавить();
	НоваяСтрока.Номенклатура = "Товар А";
	НоваяСтрока.Количество = 10;
	НоваяСтрока.Сумма = 1000;
	НоваяСтрока.Дата = '20250101';
	
	// Второе поступление
	НоваяСтрока = ТаблицаПоступлений.Добавить();
	НоваяСтрока.Номенклатура = "Товар Б";
	НоваяСтрока.Количество = 15;
	НоваяСтрока.Сумма = 2250;
	НоваяСтрока.Дата = '20250105';
	
	// Третье поступление
	НоваяСтрока = ТаблицаПоступлений.Добавить();
	НоваяСтрока.Номенклатура = "Товар А";
	НоваяСтрока.Количество = 20;
	НоваяСтрока.Сумма = 2200;
	НоваяСтрока.Дата = '20250110';
	
	// Четвертое поступление
	НоваяСтрока = ТаблицаПоступлений.Добавить();
	НоваяСтрока.Номенклатура = "Товар В";
	НоваяСтрока.Количество = 5;
	НоваяСтрока.Сумма = 750;
	НоваяСтрока.Дата = '20250115';
	
	// Пятое поступление
	НоваяСтрока = ТаблицаПоступлений.Добавить();
	НоваяСтрока.Номенклатура = "Товар А";
	НоваяСтрока.Количество = 8;
	НоваяСтрока.Сумма = 960;
	НоваяСтрока.Дата = '20250120';
	
	// Выводим исходную таблицу поступлений
	Сообщить("=== Исходная таблица поступлений ===");
	Для Каждого Строка Из ТаблицаПоступлений Цикл
		Сообщить(Строка.Номенклатура + " | Кол-во: " + Строка.Количество + 
		         " | Сумма: " + Строка.Сумма + " | Дата: " + Формат(Строка.Дата, "ДЛФ=Д"));
	КонецЦикла;
	Сообщить("");
	
	// Демонстрация списания по FIFO
	
	// Списание 1: Товар А, количество 12
	Сообщить("=== Списание 1: Товар А, количество 12 ===");
	РезультатСписания1 = СписатьПоФИФО(ТаблицаПоступлений, "Товар А", 12);
	ВывестиРезультатСписания(РезультатСписания1);
	
	// Списание 2: Товар А, количество 15
	Сообщить("=== Списание 2: Товар А, количество 15 ===");
	РезультатСписания2 = СписатьПоФИФО(ТаблицаПоступлений, "Товар А", 15);
	ВывестиРезультатСписания(РезультатСписания2);
	
	// Списание 3: Товар Б, количество 10
	Сообщить("=== Списание 3: Товар Б, количество 10 ===");
	РезультатСписания3 = СписатьПоФИФО(ТаблицаПоступлений, "Товар Б", 10);
	ВывестиРезультатСписания(РезультатСписания3);
	
	// Списание 4: Товар В, количество 8 (больше, чем есть в наличии)
	Сообщить("=== Списание 4: Товар В, количество 8 (попытка списать больше, чем есть) ===");
	РезультатСписания4 = СписатьПоФИФО(ТаблицаПоступлений, "Товар В", 8);
	ВывестиРезультатСписания(РезультатСписания4);
	
	// Выводим остатки после всех списаний
	Сообщить("");
	Сообщить("=== Остатки после всех списаний ===");
	Для Каждого Строка Из ТаблицаПоступлений Цикл
		Если Строка.Количество > 0 Тогда
			Сообщить(Строка.Номенклатура + " | Кол-во: " + Строка.Количество + 
			         " | Сумма: " + Строка.Сумма + " | Дата: " + Формат(Строка.Дата, "ДЛФ=Д"));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция списания товара по методу FIFO
//
// Параметры:
//  ТаблицаПоступлений - ТаблицаЗначений - таблица с поступлениями товара
//  Номенклатура - Строка - наименование номенклатуры для списания
//  КоличествоКСписанию - Число - количество товара к списанию
//
// Возвращаемое значение:
//  Структура - результат списания со следующими свойствами:
//    * Успешно - Булево - признак успешного списания
//    * СписаноКоличество - Число - фактически списанное количество
//    * СписаноСумма - Число - сумма списания
//    * Сообщение - Строка - сообщение о результате
//
Функция СписатьПоФИФО(ТаблицаПоступлений, Номенклатура, КоличествоКСписанию) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно", Ложь);
	Результат.Вставить("СписаноКоличество", 0);
	Результат.Вставить("СписаноСумма", 0);
	Результат.Вставить("Сообщение", "");
	
	// Проверяем, что количество к списанию положительное
	Если КоличествоКСписанию <= 0 Тогда
		Результат.Сообщение = "Количество к списанию должно быть положительным числом";
		Возврат Результат;
	КонецЕсли;
	
	// Получаем все поступления указанной номенклатуры, отсортированные по дате (FIFO)
	Отбор = Новый Структура("Номенклатура", Номенклатура);
	ПоступленияНоменклатуры = ТаблицаПоступлений.Скопировать(Отбор);
	ПоступленияНоменклатуры.Сортировать("Дата Возр");
	
	// Проверяем наличие товара
	ВсегоВНаличии = 0;
	Для Каждого Строка Из ПоступленияНоменклатуры Цикл
		ВсегоВНаличии = ВсегоВНаличии + Строка.Количество;
	КонецЦикла;
	
	Если ВсегоВНаличии = 0 Тогда
		Результат.Сообщение = "Товар """ + Номенклатура + """ отсутствует на складе";
		Возврат Результат;
	КонецЕсли;
	
	// Если запрошено больше, чем есть в наличии
	Если КоличествоКСписанию > ВсегоВНаличии Тогда
		Результат.Сообщение = "Недостаточно товара для списания. В наличии: " + ВсегоВНаличии + 
		                      ", запрошено: " + КоличествоКСписанию;
		Возврат Результат;
	КонецЕсли;
	
	// Списываем по FIFO
	КоличествоОсталосьСписать = КоличествоКСписанию;
	СписаноСумма = 0;
	
	Для Каждого СтрокаПоступления Из ПоступленияНоменклатуры Цикл
		
		Если КоличествоОсталосьСписать = 0 Тогда
			Прервать;
		КонецЕсли;
		
		// Находим соответствующую строку в исходной таблице
		ИсходнаяСтрока = Неопределено;
		Для Каждого Строка Из ТаблицаПоступлений Цикл
			Если Строка.Номенклатура = СтрокаПоступления.Номенклатура И 
			   Строка.Дата = СтрокаПоступления.Дата И 
			   Строка.Количество > 0 Тогда
				ИсходнаяСтрока = Строка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ИсходнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Определяем, сколько можно списать из текущей партии
		КоличествоВПартии = ИсходнаяСтрока.Количество;
		КоличествоКСписаниюИзПартии = Мин(КоличествоОсталосьСписать, КоличествоВПартии);
		
		// Рассчитываем сумму списания (пропорционально)
		ЦенаЗаЕдиницу = ИсходнаяСтрока.Сумма / ИсходнаяСтрока.Количество;
		СуммаСписанияИзПартии = КоличествоКСписаниюИзПартии * ЦенаЗаЕдиницу;
		
		// Списываем товар
		ИсходнаяСтрока.Количество = ИсходнаяСтрока.Количество - КоличествоКСписаниюИзПартии;
		ИсходнаяСтрока.Сумма = ИсходнаяСтрока.Сумма - СуммаСписанияИзПартии;
		
		// Накапливаем результат
		КоличествоОсталосьСписать = КоличествоОсталосьСписать - КоличествоКСписаниюИзПартии;
		СписаноСумма = СписаноСумма + СуммаСписанияИзПартии;
		
	КонецЦикла;
	
	// Формируем результат
	Результат.Успешно = Истина;
	Результат.СписаноКоличество = КоличествоКСписанию;
	Результат.СписаноСумма = СписаноСумма;
	Результат.Сообщение = "Успешно списано " + КоличествоКСписанию + 
	                      " ед. товара """ + Номенклатура + """ на сумму " + Окр(СписаноСумма, 2);
	
	Возврат Результат;
	
КонецФункции

// Процедура вывода результата списания
//
// Параметры:
//  РезультатСписания - Структура - результат выполнения функции СписатьПоФИФО
//
Процедура ВывестиРезультатСписания(РезультатСписания) Экспорт
	
	Сообщить(РезультатСписания.Сообщение);
	
	Если РезультатСписания.Успешно Тогда
		Сообщить("  Списано количество: " + РезультатСписания.СписаноКоличество);
		Сообщить("  Списано на сумму: " + Окр(РезультатСписания.СписаноСумма, 2));
	КонецЕсли;
	
	Сообщить("");
	
КонецПроцедуры

// Основная процедура для запуска демонстрации
Процедура Основная() Экспорт
	
	ДемонстрацияСписанияFIFO();
	
КонецПроцедуры
